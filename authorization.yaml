openapi: 3.0.0
info:
  title: Europace Authorization API
  description: The authorization-api can be requested to get an access-token from registered clients with client-credential-flow to use the Europace APIs.
  version: '1.0'
  termsOfService: 'https://docs.api.europace.de/nutzungsbedingungen/'
  contact:
    name: Europace AG
    url: 'https://docs.api.europace.de/'
    email: devsupport@europace2.de
servers:
  - url: 'https://api.europace.de/auth'
    description: production server
paths:
  /token:
    post:
      summary: login
      description: Client-id and client-secret must be passed via HTTP Basic Auth.
      parameters:
        - schema:
            type: string
            default: mytraceid123
          in: header
          name: X-TraceId
          description: your string for debugging
        - schema:
            type: string
            default: application/x-www-form-urlencoded
          in: header
          name: Content-Type
          description: ''
          required: true
      security:
        - basicAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/loginRequest'
            examples: {}
        description: ''
      tags:
        - Auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginResponse'
        '400':
          description: Bad Request. e.g. not existing scopes requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                kein grant_type angegeben:
                  value:
                    error_description: 'Invalid request: Missing "grant_type" parameter'
                    error: invalid_request
                Actor nicht gefunden:
                  value:
                    error_description: 'Unauthorized client: Actor not found'
                    error: unauthorized_client
                falschen Scope angefordert:
                  value:
                    error_description: 'Invalid, unknown or malformed scope'
                    error: invalid_scope
        '401':
          description: Unauthorized. Client credentials authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Autorisierungsfehler:
                  value:
                    error_description: 'Client authentication failed: Client id unknown / deactivated or client secret invalid / expired.'
                    error: invalid_client
        '429':
          description: Too Many Requests. Rate limit exceeded.
        '500':
          description: Internal Server Error. Ooops.
        '503':
          description: Service Unavailable
      operationId: createToken
    parameters: []
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    loginResponse:
      title: loginResponse
      type: object
      properties:
        access_token:
          type: string
          description: Access token for use as a bearer token in the Europace APIs.
        token_type:
          type: string
          default: BEARER
          description: Type of Token (BEARER)
        expires_in:
          type: integer
          description: Validity period in seconds
        scope:
          type: string
          description: Valid scopes of the access token
      required:
        - access_token
        - token_type
        - expires_in
        - scope
      x-examples:
        Beispiel Response:
          access_token: I6MTU3...wet46
          token_type: BEARER
          expires_in: 3600
          scope: no-access
      description: Response of a successful login
    loginRequest:
      title: loginRequest
      type: object
      description: |-
        Parameters for the login. In the simplest case grant_type=client_credential is passed. 

        When impersonating, subject, actor and impersonate as scope as well as all other required scopes must be specified.
      x-examples: {}
      properties:
        grant_type:
          type: string
          default: client_credentials
          description: Must be `client_credentials` for the client credentials flow.
        scope:
          type: string
          default: no-access impersonieren
          description: 'space-separated list of scopes. If a subject is specified, impersonate must be included as a scope. Requested scopes are restricted according to the actor''s permissions and the client''s approval by the actor. It is possible to request restricted access by specifying specific scopes. A scope represents an authorization to perform actions on the platform. If no scopes are requested, the scope is derived from the scopes stored during client registration. The currently available scopes are maintained in an overview.'
        subject:
          type: string
          description: Partner id of the partner on whose behalf the client acts. The subject must be subordinate to the actor.
        actor:
          type: string
          description: 'Partner id of the partner on whose behalf the client is acting, there must be a client approval of the actor for the client.'
      required:
        - grant_type
    error:
      title: error
      type: object
      properties:
        error_description:
          type: string
        error:
          type: string
      required:
        - error_description
        - error
      description: Content error message in addition to HTTP error code.
